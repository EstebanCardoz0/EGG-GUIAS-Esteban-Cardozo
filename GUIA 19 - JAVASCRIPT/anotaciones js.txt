ASINCRONIA
- js solo puede ejecutar un solo subproceso a la vez. es single thread
- esto significa que no puede realizar operaciones largas sin bloquear el acceso principal
- js, entonces, es asincronico, con tareas pendientes que no se bloquean para poder 
seguir con el resto de tareas.
- en resumen, js es asincrono y no bloqueante.
- concurrencia: cuando dos o mas tareas progresan simultaneamente
- paralelismo: cuando dos o mas tareas se ejecutan al mismo tiempo 
- bloqueante: la operacion no devuelve el control a la app hasta que no se complete
- no bloqueante: la operacion devuelve el control inmediatamente, mas allá del resultado.
si tiene exito devuelve datos, sino, error.
- sincrono: la respuesta sucede en el presente, la operacion esperará el resultado.
- asincrono: la respuesta sucede en el futuro, no se esperará el resultado.
- mecanismos asincronos: callback/promises/ await y async
- callback: tipo de funciones que se pasan como parámetro a otras funciones.
- promesas: algo que en principio debe cumplirse pero puede no hacerlo. pueden ser
cumplidas, no cumplidas y pendientes. hay dos instancias importantes: cómo consumirlas
y cómo crearlas.
- el async es una funcion que se declara como asincronica y devuelve una promesa,
se le pone await para esperar que la promesa se cumpla o rechace.
- las API significan aplication program interfaces, son protocolos para integrar software
de distintas aplicaciones, por ejemplo incorporar una base de datos de mysql al proyecto java.
- ejemplo de API: springboot y fetch
- Storage es un objeto que permite almacenar info de manera local. localstorage almacena
la info de forma indefinida o hasta que se borre. session storage mientras la pestaña
esté abierta.